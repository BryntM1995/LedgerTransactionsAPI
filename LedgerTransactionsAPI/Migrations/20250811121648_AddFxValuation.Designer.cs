// <auto-generated />
using System;
using LedgerTransactionsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LedgerTransactionsAPI.Migrations
{
    [DbContext(typeof(LedgerDbContext))]
    [Migration("20250811121648_AddFxValuation")]
    partial class AddFxValuation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LedgerTransactionsAPI.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AvailableBalance")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Holder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt", "Id");

                    b.ToTable("accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            AvailableBalance = 10000m,
                            CreatedAt = new DateTime(2025, 8, 11, 12, 16, 48, 59, DateTimeKind.Utc).AddTicks(3559),
                            Currency = "DOP",
                            Holder = "Cuenta A",
                            Version = 1
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            AvailableBalance = 2500m,
                            CreatedAt = new DateTime(2025, 8, 11, 12, 16, 48, 59, DateTimeKind.Utc).AddTicks(3561),
                            Currency = "DOP",
                            Holder = "Cuenta B",
                            Version = 1
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            AvailableBalance = 100m,
                            CreatedAt = new DateTime(2025, 8, 11, 12, 16, 48, 59, DateTimeKind.Utc).AddTicks(3563),
                            Currency = "USD",
                            Holder = "Cuenta C",
                            Version = 1
                        });
                });

            modelBuilder.Entity("LedgerTransactionsAPI.Models.DomainEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("Published")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Published", "CreatedAt");

                    b.ToTable("domain_outbox", (string)null);
                });

            modelBuilder.Entity("LedgerTransactionsAPI.Models.IdempotencyKey", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz");

                    b.Property<string>("RequestHash")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("jsonb");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("integer");

                    b.HasKey("Key");

                    b.ToTable("idempotency_keys", (string)null);
                });

            modelBuilder.Entity("LedgerTransactionsAPI.Models.LedgerEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("BaseCredit")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<decimal?>("BaseDebit")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz");

                    b.Property<decimal>("Credit")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("FxRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt", "Id")
                        .HasDatabaseName("ix_ledger_entries_created_at_id");

                    b.ToTable("ledger_entries", (string)null);
                });

            modelBuilder.Entity("LedgerTransactionsAPI.Models.LedgerTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FxPair")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<decimal?>("FxRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Date", "Id")
                        .HasDatabaseName("ix_transactions_date_id");

                    b.ToTable("transactions", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
